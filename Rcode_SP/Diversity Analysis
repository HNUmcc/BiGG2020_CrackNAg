# R code to generate metrics for data from rarefied_table file

setwd("C:/Users/Sarah/Desktop/BiGGDataREEU/Data/QIIME2")

# Loading in the necessary libraries and tables
library(data.table)
library(dplyr)
library(DT)
library(ecodist)
library(ggplot2)
library(ggpubr)
library(microbiome)
library(plotly)
library(phyloseq)
library(qiime2R)
library(RColorBrewer)
library(tidyr)
library(tidyverse)
library(vegan)
library(vegetarian)

rare.tab = read.table("rarefied_table.tab", h=T, sep='\t')
rare.tab = rare.tab[,2:45]
rare.tab = t(rare.tab)

table_with_taxa.tab = read.table("table-with-taxonomy.txt", h=T, sep='\t')

sample_table <- read.csv("nifa_meta.csv", header = T)

##############################################################################################################
# Calculating diversity metrics for each sample

# Shannon index
# Values are typically between 1.5 and 3.5 - these can be expected to be higher in soil microbiome data
# Shannon value increases as both evenness and richness increase

# If this breaks, just close out everything and restart Rstudio
shannon = diversity(rare.tab)
shannon = as.data.frame(shannon)

shannon = tibble::rownames_to_column(shannon, "X")

mergedData = merge(shannon, sample_table[,c(1,4,5,6,7)], by = "X", all.x = T)


# Simpson's index
# Reported as 1-D, wherein a higher value for D means less diversity in the sample
# Similar to Shannon index, but much less sensitive to species richness
simpson = diversity(rare.tab, "simpson")
simpson = as.data.frame(simpson)

simpson = tibble::rownames_to_column(simpson, "X")

mergedData = merge(simpson, mergedData, by = "X", all.x = T)


# Bray-Curtis dissimilarity metric
# A value of 0 means the two compared samples have the exact same composition
# A value of 1 means the two samples have no shared species
bray = vegdist(rare.tab, "bray")

##############################################################################################################
# Graphing our diversity metrics

# Shannon index
hist(shannon[,2])

ggplot(mergedData, aes(x=Treat, y=shannon, color=Compartment)) + # indicate what data, and which columns to use
  geom_boxplot()+ # plot type
  labs(title = "Shannon diversity", x="Treatment",y="Shannon index")+ # edit labels
  theme(axis.text.x=element_text(angle=45, hjust=1), # rotate x-axis labels
        panel.background = element_blank(), # remove background and grids
        panel.border = element_rect(fill = NA, color = "black")) # add border


# Simpson's index
hist(simpson[,2])

ggplot(mergedData, aes(x=Treat, y=simpson, color=Compartment)) + # indicate what data, and which columns to use
  geom_boxplot()+ # plot type
  labs(title = "Simpson diversity", x="Treatment",y="Simpson index")+ # edit labels
  theme(axis.text.x=element_text(angle=45, hjust=1), # rotate x-axis labels
        panel.background = element_blank(), # remove background and grids
        panel.border = element_rect(fill = NA, color = "black")) # add border


# Bray-Curtis dissimilarity metric
hist(bray)

adonis2(bray~mergedData$Soil_type)


##############################################################################################################
# Making the NMDS graphs

# Soil type
# For some reason the control points change occasionally?
windows(10,5)

opar<-par()
par(mfrow=c(1,2))

plot(meta12<-metaMDS(bray,zerodist=ignore),type="n",
     main="Soil Type")
points(meta12,select=which(mergedData$Soil_type=="TN"),col="red")
points(meta12,select=which(mergedData$Soil_type=="WA"),col="blue")
ordispider(meta12,group=mergedData$Soil_type)

par(opar)


# Compartment
windows(10,5)

opar<-par()
par(mfrow=c(1,2))

plot(meta12<-metaMDS(bray,zerodist=ignore),type="n",
     main="Compartment")
points(meta12,select=which(mergedData$Compartment=="Leaf"),col="green")
points(meta12,select=which(mergedData$Compartment=="Root"),col="brown")
ordispider(meta12,group=mergedData$Compartment)

par(opar)


# AG size
windows(10,5)

opar<-par()
par(mfrow=c(1,2))

plot(meta12<-metaMDS(bray,zerodist=ignore),type="n",
     main="AG Size")
points(meta12,select=which(mergedData$AG_Size=="Small"),col="red")
points(meta12,select=which(mergedData$AG_Size=="Medium"),col="green")
points(meta12,select=which(mergedData$AG_Size=="Large"),col="blue")
ordispider(meta12,group=mergedData$AG_Size)

par(opar)


##############################################################################################################
# https://microbiome.github.io/tutorials/PERMANOVA.html

physeq = qza_to_phyloseq(features="rarefied_table.qza", tree="rooted-tree.qza", taxonomy="taxonomy.qza", 
                         metadata="sample-metadata.tsv")

pseq.rel = microbiome::transform(physeq, "compositional")
otu = abundances(pseq.rel)
meta = meta(pseq.rel)

plot_landscape(pseq.rel, method = "NMDS", distance = "bray", col = "Soil_type")

# This is the important line - this makes the Permanova table
permanova = adonis2(t(otu) ~ Soil_type*Compartment*AG_Size, data = meta, permutations=999)


##############################################################################################################
# https://archetypalecology.wordpress.com/2018/02/19/principal-coordinates-analysis-pcoa-in-r/
# Generating pcoa plots with the ecodist package
# Need to figure out how to separate data based on factors (soil type, compartment, etc)

taxa.bray = vegdist(table_with_taxa.tab[,2:51], method = "bray")
pcoaTX = pco(taxa.bray, negvals = 0, dround = 0)

taxa.vegdist = vegdist(t(otu),method="bray",binary = FALSE)
taxa.pcoa = ordinate(physeq, method = "PCoA", taxa.vegdist)

# For graphs of other variables, change color = "[var]"
plot_ordination(physeq, taxa.pcoa ,type="samples",color="Soil_type")+
  geom_point()+
  labs(title = "Soil Type")+
  theme(panel.background = element_blank(),
        panel.border = element_rect(fill = NA, color = "black"))


plot_ly(x=temp, y=pressure, z=dtime, type="scatter3d", mode="markers", color=Soil_type)





##############################################################################################################
# Making subsets to analyze - haven't used

TN_leaf = subset(mergedData, mergedData$Soil_type == "TN")
TN_leaf = subset(TN_leaf, TN_leaf$Compartment == "Leaf")

WA_leaf = subset(mergedData, mergedData$Soil_type == "WA")
WA_leaf = subset(WA_leaf, WA_leaf$Compartment == "Leaf")
